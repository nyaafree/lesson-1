.menu-item {
  // min-width: 30%なので基本的には３分割
  min-width: 30%;
  height: 240px;
  // このリンク http://webukatu.com/sample/html_advance/flexbox/ を参照
  // flex-grow,flex-shrink,flex-basisの順に指定
  // flex-grow:1(defaultでは0)なので最大約2倍に膨張する
  // 親要素でflex-wrap: wrapのため１列に3個並んだら折り返される。
  // しかし2列目には要素が2つしかないので膨張して2つのメニューアイテムで列を占有することになる。
  flex: 1 1 auto;
  display: flex;
  // align-items,justify-contentを共にセンターにすることで中の要素を中央に配置する
  align-items: center;
  justify-content: center;
  border: 1px solid black;
  margin: 0 7.5px 15px;
  // hoverした時に背景画像が拡大するようにするが、はみ出さないようにする
  // 領域からはみ出した部分はカット
  overflow: hidden;

  &:hover {
    cursor: pointer;
  
    & .background-image {
      // hoverした時のみ1.1倍にする
      transform: scale(1.1);
      // https://junjun-web.net/css/cubic-bezier/
      // イージングをカスタマイズしてつけるサイト
      // 6秒かけてアニメーションしていく
      transition: transform 6s cubic-bezier(0.25, 0.45, 0.45, 0.95);
    }
  
    & .content {
      // 少し透明度が上がって背景色の白色が濃くなる
      opacity: 0.9;
    }
  }
  
  

  .background-image{
    // width,height共に100%にしてこのクラスが指定されているdivタグのエリアを親要素の縦横100%に合わせる
    width: 100%;
    height: 100%;
    // 背景画像を表示する際の基準位置
    background-position: center;
    // 縦横比は保持して、背景領域を完全に覆う最小サイズになるように背景画像を拡大縮小する
    // http://www.htmq.com/css3/background-size.shtml
    background-size: cover;
  }

  &.large{
    height: 380px;
  }

  &:first-child {
    margin-right: 7.5px;
  }

  &:last-child {
    margin-left: 7.5px;
  }

  .content {
    height: 90px;
    padding: 0 25px;
    display: flex;
    // 垂直方向に要素を配置
    flex-direction: column;
    // 垂直方向で中央寄せ(子要素)
    align-items: center;
    // 水平方向で中央寄せ(子要素)
    justify-content: center;
    border: 1px solid black;
    background-color: white;
    // 透過させる
    opacity: 0.7;
    // position:absoluteで浮かせる
    position: absolute;

    .title {
      font-weight: bold;
      margin-bottom: 6px;
      font-size: 22px;
      color: #4a4a4a;
    }

    .subtitle {
      font-weight: lighter;
      font-size: 16px;
    }
  }
}